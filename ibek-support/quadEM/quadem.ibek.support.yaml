# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/2.0.2/ibek.support.schema.json

module: quadEM

entity_models:
  - name: TetrAMM
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      PORT:
        type: id
        description: |-
          Template argument

      P:
        type: str
        description: |-
          Base name of PV.

      R:
        type: str
        description: |-
          Second macro for name of PV.

      QSIZE:
        type: int
        description: |-
          ..
        default: 20

      RING_SIZE:
        type: int
        description: |-
          ..
        default: 10000

      IP:
        type: str
        description: |-
          IP address of the TetrAMM device

    pre_init:
      - value: |
          drvAsynIPPortConfigure({{PORT}}ip, {{IP}}, 100, 0, 0)
          asynOctetSetInputEos({{PORT}}ip, 0, "\r\n")
          asynOctetSetOutputEos({{PORT}}ip, 0, "\r")

          # drvTetrAMMConfigure(portName, IPportName, RingSize)
          drvTetrAMMConfigure("{{PORT}}", "{{PORT}}ip", {{RING_SIZE}})

    post_init:
      - value: |
          # Increase precision of sample time for TetrAMM
          dbpf("{{P}}{{R}}SampleTime_RBV.PREC", "5")

    databases:
      - file: $(QUADEM)/db/TetrAMM.template
        args:
          P:
          R:
          PORT:

    pvi:
      yaml_path: drvQuadEM.pvi.device.yaml
      ui_macros:
        P:
        R:
      pv: true
      pv_prefix: $(P)$(R)

  #
  # WARNING - non print commands in Initialise not parsed
  - name: Plugins
    description: |-
      This plugin instantiates 11 stats plugins for Current, Sum, Diff and Pos
    parameters:
      DEVICE:
        type: object
        description: |-
          Reference to the parent quadEM device

      PORTPREFIX:
        type: id
        description: |-
          The prefix for plugin asyn port names

      STAT_NCHAN:
        type: int
        description: |-
          Template argument

      STAT_XSIZE:
        type: int
        description: |-
          Template argument

      HIST_SIZE:
        type: int
        description: |-
          Template argument
        default: 256

      QUEUE:
        type: int
        description: |-
          length of NDArray queue
        default: 16

    pre_init:
      - when: first
      - value: |
          # NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory, priority, stackSize, maxThreads)
          # NDTimeSeriesConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxSignals)

      - value: |
          {% for tab in ["I1", "I2", "I3", "I4" , "SumX", "SumY", "SumAll", "DiffX", "DiffY", "PosX", "PosY"] -%}
          {# support the historical, inconsistent naming of PVs and asyn ports #}
          {%- set r_val_stats = "Cur%d" % loop.index if tab.startswith("I") else tab -%}
          {%- set r_val_array = "ARR%d" % loop.index if tab.startswith("I") else "ARR%s" % tab -%}

          NDStatsConfigure({{PORTPREFIX}}.STATS.{{tab}}, {{QUEUE}}, 0, {{DEVICE.PORT}}, {{loop.index0}}, 0, 0, 0, 0, 1)
          dbLoadRecords("$(ADCORE)/db/NDStats.template", "P={{DEVICE.P}},R=:{{r_val_stats}}:, PORT={{PORTPREFIX}}.STATS.{{tab}}, ADDR=0, NDARRAY_PORT={{DEVICE.PORT}}, NDARRAY_ADDR={{loop.index0}}, NCHANS={{STAT_NCHAN}}, ENABLED=1, XSIZE={{STAT_XSIZE}}, YSIZE=0, HIST_SIZE={{HIST_SIZE}}")

          NDTimeSeriesConfigure({{PORTPREFIX}}.STATS.{{tab}}_TS, {{QUEUE}}, 0, {{PORTPREFIX}}.STATS.{{tab}}, 1, 23)
          dbLoadRecords("$(ADCORE)/db/NDTimeSeries.template",  "P={{DEVICE.P}}, R=:{{r_val_stats}}:TS:, PORT={{PORTPREFIX}}.STATS.{{tab}}_TS,ADDR=1, NDARRAY_PORT={{PORTPREFIX}}.{{tab}}, NDARRAY_ADDR=0, NCHANS={{STAT_NCHAN}}, ENABLED=1")

          NDStdArraysConfigure({{PORTPREFIX}}.ARRAYS.{{tab}}, {{QUEUE}}, 0, {{DEVICE.PORT}}, {{loop.index0}}, 0, 0, 0, 0, 1)
          dbLoadRecords("$(ADCORE)/db/NDStdArrays.template", "P={{DEVICE.P}},R=:{{r_val_array}}:, PORT={{PORTPREFIX}}.ARRAYS.{{tab}},ADDR=0, NDARRAY_PORT={{DEVICE.PORT}}, NDARRAY_ADDR={{loop.index0}}, ENABLED=1, FTVL=DOUBLE, TYPE=Float64, NCHANS={{STAT_NCHAN}}, XSIZE={{STAT_XSIZE}}, YSIZE=0, HIST_SIZE={{HIST_SIZE}}, NELEMENTS={{STAT_XSIZE}}")
          {% endfor %}
